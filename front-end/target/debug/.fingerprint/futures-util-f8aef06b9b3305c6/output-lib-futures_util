{"$message_type":"diagnostic","message":"found invalid metadata files for crate `memchr`","code":{"code":"E0786","explanation":"A metadata file was invalid.\n\nErroneous code example:\n\n```ignore (needs extern files)\nuse ::foo; // error: found invalid metadata files for crate `foo`\n```\n\nWhen loading crates, each crate must have a valid metadata file.\nInvalid files could be caused by filesystem corruption,\nan IO error while reading the file, or (rarely) a bug in the compiler itself.\n\nConsider deleting the file and recreating it,\nor reporting a bug against the compiler.\n"},"level":"error","spans":[{"file_name":"/home/ravi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/io/line_writer.rs","byte_start":2113,"byte_end":2119,"line_start":65,"line_end":65,"column_start":35,"column_end":41,"is_primary":true,"text":[{"text":"        let newline_index = match memchr::memrchr(b'\\n', buf) {","highlight_start":35,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"corrupt metadata encountered in /home/ravi/ECL2 Projects/project yashwanth/temp/Fullstack_axum_sqlx_yew_crud_implementation/front-end/target/debug/deps/libmemchr-d64df5cb25b3d69e.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0786]\u001b[0m\u001b[0m\u001b[1m: found invalid metadata files for crate `memchr`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ravi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/io/line_writer.rs:65:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let newline_index = match memchr::memrchr(b'\\n', buf) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: corrupt metadata encountered in /home/ravi/ECL2 Projects/project yashwanth/temp/Fullstack_axum_sqlx_yew_crud_implementation/front-end/target/debug/deps/libmemchr-d64df5cb25b3d69e.rmeta\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"found invalid metadata files for crate `memchr`","code":{"code":"E0786","explanation":"A metadata file was invalid.\n\nErroneous code example:\n\n```ignore (needs extern files)\nuse ::foo; // error: found invalid metadata files for crate `foo`\n```\n\nWhen loading crates, each crate must have a valid metadata file.\nInvalid files could be caused by filesystem corruption,\nan IO error while reading the file, or (rarely) a bug in the compiler itself.\n\nConsider deleting the file and recreating it,\nor reporting a bug against the compiler.\n"},"level":"error","spans":[{"file_name":"/home/ravi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/io/line_writer.rs","byte_start":2994,"byte_end":3000,"line_start":90,"line_end":90,"column_start":19,"column_end":25,"is_primary":true,"text":[{"text":"            match memchr::memrchr(b'\\n', scan_area) {","highlight_start":19,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"corrupt metadata encountered in /home/ravi/ECL2 Projects/project yashwanth/temp/Fullstack_axum_sqlx_yew_crud_implementation/front-end/target/debug/deps/libmemchr-d64df5cb25b3d69e.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0786]\u001b[0m\u001b[0m\u001b[1m: found invalid metadata files for crate `memchr`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ravi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/io/line_writer.rs:90:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            match memchr::memrchr(b'\\n', scan_area) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: corrupt metadata encountered in /home/ravi/ECL2 Projects/project yashwanth/temp/Fullstack_axum_sqlx_yew_crud_implementation/front-end/target/debug/deps/libmemchr-d64df5cb25b3d69e.rmeta\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"found invalid metadata files for crate `memchr`","code":{"code":"E0786","explanation":"A metadata file was invalid.\n\nErroneous code example:\n\n```ignore (needs extern files)\nuse ::foo; // error: found invalid metadata files for crate `foo`\n```\n\nWhen loading crates, each crate must have a valid metadata file.\nInvalid files could be caused by filesystem corruption,\nan IO error while reading the file, or (rarely) a bug in the compiler itself.\n\nConsider deleting the file and recreating it,\nor reporting a bug against the compiler.\n"},"level":"error","spans":[{"file_name":"/home/ravi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/io/line_writer.rs","byte_start":3771,"byte_end":3777,"line_start":113,"line_end":113,"column_start":34,"column_end":40,"is_primary":true,"text":[{"text":"            .find_map(|(i, buf)| memchr::memchr(b'\\n', buf).map(|_| i));","highlight_start":34,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"corrupt metadata encountered in /home/ravi/ECL2 Projects/project yashwanth/temp/Fullstack_axum_sqlx_yew_crud_implementation/front-end/target/debug/deps/libmemchr-d64df5cb25b3d69e.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0786]\u001b[0m\u001b[0m\u001b[1m: found invalid metadata files for crate `memchr`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ravi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/io/line_writer.rs:113:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .find_map(|(i, buf)| memchr::memchr(b'\\n', buf).map(|_| i));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: corrupt metadata encountered in /home/ravi/ECL2 Projects/project yashwanth/temp/Fullstack_axum_sqlx_yew_crud_implementation/front-end/target/debug/deps/libmemchr-d64df5cb25b3d69e.rmeta\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"found invalid metadata files for crate `memchr`","code":{"code":"E0786","explanation":"A metadata file was invalid.\n\nErroneous code example:\n\n```ignore (needs extern files)\nuse ::foo; // error: found invalid metadata files for crate `foo`\n```\n\nWhen loading crates, each crate must have a valid metadata file.\nInvalid files could be caused by filesystem corruption,\nan IO error while reading the file, or (rarely) a bug in the compiler itself.\n\nConsider deleting the file and recreating it,\nor reporting a bug against the compiler.\n"},"level":"error","spans":[{"file_name":"/home/ravi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/io/read_until.rs","byte_start":1061,"byte_end":1067,"line_start":37,"line_end":37,"column_start":30,"column_end":36,"is_primary":true,"text":[{"text":"            if let Some(i) = memchr::memchr(byte, available) {","highlight_start":30,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"corrupt metadata encountered in /home/ravi/ECL2 Projects/project yashwanth/temp/Fullstack_axum_sqlx_yew_crud_implementation/front-end/target/debug/deps/libmemchr-d64df5cb25b3d69e.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0786]\u001b[0m\u001b[0m\u001b[1m: found invalid metadata files for crate `memchr`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ravi/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.30/src/io/read_until.rs:37:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if let Some(i) = memchr::memchr(byte, available) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: corrupt metadata encountered in /home/ravi/ECL2 Projects/project yashwanth/temp/Fullstack_axum_sqlx_yew_crud_implementation/front-end/target/debug/deps/libmemchr-d64df5cb25b3d69e.rmeta\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 4 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 4 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0786`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0786`.\u001b[0m\n"}
